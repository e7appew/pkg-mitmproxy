
- Check the version number:

    mitmproxy/libmproxy/version.py
    netlib/netlib/version.py
    pathod/libpathod/version.py

- Ensure that the website style assets have been compiled for production, and
synced to the docs.

- Render the docs, update CONTRIBUTORS file:
    ./release/build.py docs contributors

- Run the test release, make sure the output is sensible
    ./release/build.py release

- Build the OSX binaries
    - Follow instructions in osx-binaries
    - Move to download dir:
        mv ./tmp/osx-mitmproxy-VERSION.tar.gz ~/mitmproxy/www.mitmproxy.org/src/download

- Move all source distributions from mitmproxy's dist folder to the server:
    mv ./dist/* ~/mitmproxy/www.mitmproxy.org/src/download

- Tag with the version number, and do:
    git push --tags
  Tag and push v0.12 for all projects:
    ./release/build.py tag v0.12

- Upload to pypi:

    ./release/build.py upload

  Be careful: Pypi requires you to bump the version number if you want to do any further changes.

- Now bump the version number to be ready for the next cycle:

    TODO: We just shipped 0.12 - do we bump to 0.12.1 or 0.13 now?

    mitmproxy/libmproxy/version.py
    netlib/netlib/version.py
    pathod/libpathod/version.py